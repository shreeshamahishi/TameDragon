@.str = private unnamed_addr constant [30 x i8] c"addtition of the two no is %d\00", align 16

declare i32 @printf(i8*, ...) 

define i32 @add(i32 %a, i32 %b) nounwind {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %result = alloca i32, align 4
  store i32 %a, i32* %1, align 4
  store i32 %b, i32* %2, align 4
  %3 = load i32* %1, align 4
  %4 = load i32* %2, align 4
  %5 = add i32 %3, %4
  store i32 %5, i32* %result, align 4
  %6 = load i32* %result, align 4
  ret i32 %6
}

define i32 @foo(i32 %b) nounwind {
  %1 = call i32 @add(i32 10, i32 %b)
  %2 = getelementptr inbounds [30 x i8]* @.str, i32 0, i32 0
  %3 = call i32 (i8*, ...)* @printf(i8* %2, i32 %1)
  ret i32 %1
}