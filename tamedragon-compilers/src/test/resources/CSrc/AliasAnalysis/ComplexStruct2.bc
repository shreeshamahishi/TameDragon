target datalayout="e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:128:128-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32"

%struct.addressStruct = type { i32, i8*, i8*, i8*, i8*, i8* }
%struct.contactDetails = type { %struct.addressStruct, i8* }
%struct.PersonAttr = type { i8*, i8*, double, %struct.contactDetails, %struct.contactDetails, i64 }

@.str = private unnamed_addr constant [10 x i8] c"hn1 = %d\0A\00", align 1
@.str1 = private unnamed_addr constant [10 x i8] c"hn2 = %d\0A\00", align 1
@.str2 = private unnamed_addr constant [10 x i8] c"hn3 = %d\0A\00", align 1
@.str3 = private unnamed_addr constant [12 x i8] c"name1 = %s\0A\00", align 1
@.str4 = private unnamed_addr constant [12 x i8] c"name2 = %s\0A\00", align 1

declare i32 @printf(i8*, ...) 

define i32 @foo(%struct.PersonAttr* %allPersons, i32 %m, i32 %n) nounwind {
  %1 = alloca %struct.PersonAttr*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %name1 = alloca i8*, align 8
  %name2 = alloca i8*, align 8
  %hn1 = alloca i32, align 4
  %hn2 = alloca i32, align 4
  %hn3 = alloca i32, align 4
  store %struct.PersonAttr* %allPersons, %struct.PersonAttr** %1, align 8
  store i32 %m, i32* %2, align 4
  store i32 %n, i32* %3, align 4
  %4 = load %struct.PersonAttr** %1, align 8
  %5 = getelementptr inbounds %struct.PersonAttr* %4, i32 0, i32 3, i32 0, i32 0
  %6 = load i32* %5, align 4
  store i32 %6, i32* %hn1, align 4
  %7 = getelementptr inbounds [10 x i8]* @.str, i32 0, i32 0
  %8 = load i32* %hn1, align 4
  %9 = call i32 (i8*, ...)* @printf(i8* %7, i32 %8)
  %10 = load %struct.PersonAttr** %1, align 8
  %11 = getelementptr inbounds %struct.PersonAttr* %10, i32 0, i32 3, i32 0, i32 0
  %12 = load i32* %11, align 4
  store i32 %12, i32* %hn2, align 4
  %13 = getelementptr inbounds [10 x i8]* @.str1, i32 0, i32 0
  %14 = load i32* %hn2, align 4
  %15 = call i32 (i8*, ...)* @printf(i8* %13, i32 %14)
  %16 = load %struct.PersonAttr** %1, align 8
  %17 = getelementptr inbounds %struct.PersonAttr* %16, i32 1, i32 3, i32 0, i32 0
  %18 = load i32* %17, align 4
  store i32 %18, i32* %hn3, align 4
  %19 = getelementptr inbounds [10 x i8]* @.str2, i32 0, i32 0
  %20 = load i32* %hn3, align 4
  %21 = call i32 (i8*, ...)* @printf(i8* %19, i32 %20)
  %22 = load i32* %hn1, align 4
  %23 = load i32* %hn3, align 4
  %24 = icmp eq i32 %22, %23
  br i1 %24, label %25, label %32

; <label>:25                          		; preds = %0
  %26 = load %struct.PersonAttr** %1, align 8
  %27 = getelementptr inbounds %struct.PersonAttr* %26, i32 0, i32 0
  %28 = load i8** %27, align 8
  store i8* %28, i8** %name1, align 8
  %29 = getelementptr inbounds [12 x i8]* @.str3, i32 0, i32 0
  %30 = load i8** %name1, align 8
  %31 = call i32 (i8*, ...)* @printf(i8* %29, i8* %30)
  br label %32

; <label>:32		; preds = %34, %0
  %33 = load i32* %hn1, align 4
  %34 = load i32* %hn2, align 4
  %35 = icmp eq i32 %33, %34
  br i1 %35, label %36, label %43

; <label>:36                         		; preds = %42
  %37 = load %struct.PersonAttr** %1, align 8
  %38 = getelementptr inbounds %struct.PersonAttr* %37, i32 0, i32 0
  %39 = load i8** %38, align 8
  store i8* %39, i8** %name2, align 8
  %40 = getelementptr inbounds [12 x i8]* @.str4, i32 0, i32 0
  %41 = load i8** %name2, align 8
  %42 = call i32 (i8*, ...)* @printf(i8* %40, i8* %41)
  br label %43

; <label>:43		; preds = %46, %42
  ret i32 0
}
